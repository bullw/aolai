<ns0:test-suite xmlns:ns0="urn:model.allure.qatools.yandex.ru" start="1546056519593" stop="1546056624796">
  <name>test_bnal</name>
  <labels/>
  <test-cases>
    <test-case start="1546056519593" status="failed" stop="1546056554040">
      <name>Test_login.test_login_error[11111\u4e2d\u56fd-9998888-0-\u4e0d\u5b58\u5728-\u6b64\u7528\u6237\u4e0d\u5b58\u5728]</name>
      <failure>
        <message>InvalidSelectorException: Message: io.appium.uiautomator2.common.exceptions.InvalidSelectorException: java.lang.IllegalArgumentException: Unable to compile '//*[contains(@text,'不存在']'. See Cause.
	at io.appium.uiautomator2.core.AccessibilityNodeInfoDumper.findNodes(AccessibilityNodeInfoDumper.java:204)
	at io.appium.uiautomator2.utils.ElementLocationHelpers.getXPathNodeMatch(ElementLocationHelpers.java:68)
	at io.appium.uiautomator2.handler.FindElement.findElement(FindElement.java:103)
	at io.appium.uiautomator2.handler.FindElement.safeHandle(FindElement.java:75)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:36)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:250)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:241)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:44)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:514)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:468)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:818)
Caused by: java.lang.IllegalArgumentException: Unable to compile '//*[contains(@text,'不存在']'. See Cause.
	at org.jdom2.xpath.jaxen.JaxenCompiled.&lt;init&gt;(JaxenCompiled.java:152)
	at org.jdom2.xpath.jaxen.JaxenXPathFactory.compile(JaxenXPathFactory.java:82)
	at org.jdom2.xpath.XPathFactory.compile(XPathFactory.java:282)
	at io.appium.uiautomator2.core.AccessibilityNodeInfoDumper.findNodes(AccessibilityNodeInfoDumper.java:202)
	... 33 more
Caused by: org.jaxen.XPathSyntaxException: Expected: )
	at org.jaxen.BaseXPath.&lt;init&gt;(BaseXPath.java:121)
	at org.jaxen.BaseXPath.&lt;init&gt;(BaseXPath.java:142)
	at org.jdom2.xpath.jaxen.JaxenCompiled.&lt;init&gt;(JaxenCompiled.java:150)
	... 36 more
Caused by: class org.jaxen.saxpath.XPathSyntaxException: //*[contains(@text,'不存在']: 24: Expected: )
	at org.jaxen.saxpath.base.XPathReader.createSyntaxException(XPathReader.java:1085)
	at org.jaxen.saxpath.base.XPathReader.match(XPathReader.java:1038)
	at org.jaxen.saxpath.base.XPathReader.functionCall(XPathReader.java:229)
	at org.jaxen.saxpath.base.XPathReader.filterExpr(XPathReader.java:279)
	at org.jaxen.saxpath.base.XPathReader.pathExpr(XPathReader.java:161)
	at org.jaxen.saxpath.base.XPathReader.unionExpr(XPathReader.java:1007)
	at org.jaxen.saxpath.base.XPathReader.unaryExpr(XPathReader.java:995)
	at org.jaxen.saxpath.base.XPathReader.multiplicativeExpr(XPathReader.java:943)
	at org.jaxen.saxpath.base.XPathReader.additiveExpr(XPathReader.java:913)
	at org.jaxen.saxpath.base.XPathReader.relationalExpr(XPathReader.java:860)
	at org.jaxen.saxpath.base.XPathReader.equalityExpr(XPathReader.java:829)
	at org.jaxen.saxpath.base.XPathReader.andExpr(XPathReader.java:809)
	at org.jaxen.saxpath.base.XPathReader.orExpr(XPathReader.java:787)
	at org.jaxen.saxpath.base.XPathReader.expr(XPathReader.java:780)
	at org.jaxen.saxpath.base.XPathReader.predicateExpr(XPathReader.java:775)
	at org.jaxen.saxpath.base.XPathReader.predicate(XPathReader.java:766)
	at org.jaxen.saxpath.base.XPathReader.predicates(XPathReader.java:751)
	at org.jaxen.saxpath.base.XPathReader.nameTest(XPathReader.java:717)
	at org.jaxen.saxpath.base.XPathReader.nodeTest(XPathReader.java:600)
	at org.jaxen.saxpath.base.XPathReader.step(XPathReader.java:541)
	at org.jaxen.saxpath.base.XPathReader.steps(XPathReader.java:442)
	at org.jaxen.saxpath.base.XPathReader.absoluteLocationPath(XPathReader.java:390)
	at org.jaxen.saxpath.base.XPathReader.locationPath(XPathReader.java:326)
	at org.jaxen.saxpath.base.XPathReader.pathExpr(XPathReader.java:185)
	at org.jaxen.saxpath.base.XPathReader.unionExpr(XPathReader.java:1007)
	at org.jaxen.saxpath.base.XPathReader.unaryExpr(XPathReader.java:995)
	at org.jaxen.saxpath.base.XPathReader.multiplicativeExpr(XPathReader.java:943)
	at org.jaxen.saxpath.base.XPathReader.additiveExpr(XPathReader.java:913)
	at org.jaxen.saxpath.base.XPathReader.relationalExpr(XPathReader.java:860)
	at org.jaxen.saxpath.base.XPathReader.equalityExpr(XPathReader.java:829)
	at org.jaxen.saxpath.base.XPathReader.andExpr(XPathReader.java:809)
	at org.jaxen.saxpath.base.XPathReader.orExpr(XPathReader.java:787)
	at org.jaxen.saxpath.base.XPathReader.expr(XPathReader.java:780)
	at org.jaxen.saxpath.base.XPathReader.parse(XPathReader.java:100)
	at org.jaxen.BaseXPath.&lt;init&gt;(BaseXPath.java:116)
	... 38 more

</message>
        <stack-trace>self = &lt;test_bnal.Test_login object at 0x0000029A276327F0&gt;, username = '11111中国', password = '9998888', toast = '不存在'
correct_toast = '此用户不存在', tag = 0

    @pytest.mark.parametrize('username, password, tag, toast, correct_toast', read_yaml())
    # @pytest.mark.run(order=10)
    def test_login_error(self, username, password, toast, correct_toast, tag):
        # 点击我的
        self.bnal.get_page_home().click_my()
        # 点击已有账号输入
        self.bnal.get_page_home().click_my_login()
        self.bnal.get_page_Input().login_kuang_error(username, password)
        self.bnal.get_page_Input().click_login()
        if tag == 1:
            try:
                success_login = self.bnal.get_page_Logined().is_logined()
                # 点击设置
                self.bnal.get_page_Logined().click_setting()
                self.bnal.get_page_Logined().up_down()
                self.bnal.get_page_Logined().click_quit()
                self.bnal.get_page_Logined().click_delete()
                assert success_login,self.bnal.get_page_Input().get_screen()
            except:
                # 定位吐司
                self.bnal.get_page_Input().get_toast(toast)
                # 截图
                self.bnal.get_page_Input().get_screen()
                # 登录失败, 点击叉号
                self.bnal.get_page_Input().click_x()
        else:
            try:
&gt;               t_oast = self.bnal.get_page_Input().get_toast_text(toast)

script\test_bnal.py:89: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
data\base_action.py:44: in get_toast_text
    toast_text = self.find_element((By.XPATH, toast_xpath)).text
data\base_action.py:13: in find_element
    return self.driver.find_element(loc[0], loc[1])
e:\install\python3.5\lib\site-packages\appium\webdriver\webdriver.py:219: in find_element
    'value': value})['value']
e:\install\python3.5\lib\site-packages\selenium\webdriver\remote\webdriver.py:321: in execute
    self.error_handler.check_response(response)
e:\install\python3.5\lib\site-packages\appium\webdriver\errorhandler.py:29: in check_response
    raise wde
e:\install\python3.5\lib\site-packages\appium\webdriver\errorhandler.py:24: in check_response
    super(MobileErrorHandler, self).check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;appium.webdriver.errorhandler.MobileErrorHandler object at 0x0000029A27621358&gt;
response = {'status': 400, 'value': '{"value":{"error":"invalid selector","message":"io.appium.uiautomator2.common.exceptions.Inv...s\\\\_appium-base-driver@3.13.1@appium-base-driver\\\\lib\\\\jsonwp-proxy\\\\proxy.js:234:19)\\n    at &lt;anonymous&gt;"}}'}

    def check_response(self, response):
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if status is None or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, basestring):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if status is None:
                        status = value["status"]
                        message = value["value"]
                        if not isinstance(message, basestring):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if value == '' or value is None:
            value = response['value']
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        if 'stackTrace' in value and value['stackTrace']:
            stacktrace = []
            try:
                for frame in value['stackTrace']:
                    line = self._value_or_default(frame, 'lineNumber', '')
                    file = self._value_or_default(frame, 'fileName', '&lt;anonymous&gt;')
                    if line:
                        file = "%s:%s" % (file, line)
                    meth = self._value_or_default(frame, 'methodName', '&lt;anonymous&gt;')
                    if 'className' in frame:
                        meth = "%s.%s" % (frame['className'], meth)
                    msg = "    at %s (%s)"
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
        elif exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)
&gt;       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.InvalidSelectorException: Message: io.appium.uiautomator2.common.exceptions.InvalidSelectorException: java.lang.IllegalArgumentException: Unable to compile '//*[contains(@text,'不存在']'. See Cause.
E       	at io.appium.uiautomator2.core.AccessibilityNodeInfoDumper.findNodes(AccessibilityNodeInfoDumper.java:204)
E       	at io.appium.uiautomator2.utils.ElementLocationHelpers.getXPathNodeMatch(ElementLocationHelpers.java:68)
E       	at io.appium.uiautomator2.handler.FindElement.findElement(FindElement.java:103)
E       	at io.appium.uiautomator2.handler.FindElement.safeHandle(FindElement.java:75)
E       	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:36)
E       	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:250)
E       	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:241)
E       	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:44)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
E       	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
E       	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
E       	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
E       	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)
E       	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)
E       	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)
E       	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
E       	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
E       	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
E       	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
E       	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
E       	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
E       	at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:514)
E       	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:468)
E       	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
E       	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
E       	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
E       	at java.lang.Thread.run(Thread.java:818)
E       Caused by: java.lang.IllegalArgumentException: Unable to compile '//*[contains(@text,'不存在']'. See Cause.
E       	at org.jdom2.xpath.jaxen.JaxenCompiled.&lt;init&gt;(JaxenCompiled.java:152)
E       	at org.jdom2.xpath.jaxen.JaxenXPathFactory.compile(JaxenXPathFactory.java:82)
E       	at org.jdom2.xpath.XPathFactory.compile(XPathFactory.java:282)
E       	at io.appium.uiautomator2.core.AccessibilityNodeInfoDumper.findNodes(AccessibilityNodeInfoDumper.java:202)
E       	... 33 more
E       Caused by: org.jaxen.XPathSyntaxException: Expected: )
E       	at org.jaxen.BaseXPath.&lt;init&gt;(BaseXPath.java:121)
E       	at org.jaxen.BaseXPath.&lt;init&gt;(BaseXPath.java:142)
E       	at org.jdom2.xpath.jaxen.JaxenCompiled.&lt;init&gt;(JaxenCompiled.java:150)
E       	... 36 more
E       Caused by: class org.jaxen.saxpath.XPathSyntaxException: //*[contains(@text,'不存在']: 24: Expected: )
E       	at org.jaxen.saxpath.base.XPathReader.createSyntaxException(XPathReader.java:1085)
E       	at org.jaxen.saxpath.base.XPathReader.match(XPathReader.java:1038)
E       	at org.jaxen.saxpath.base.XPathReader.functionCall(XPathReader.java:229)
E       	at org.jaxen.saxpath.base.XPathReader.filterExpr(XPathReader.java:279)
E       	at org.jaxen.saxpath.base.XPathReader.pathExpr(XPathReader.java:161)
E       	at org.jaxen.saxpath.base.XPathReader.unionExpr(XPathReader.java:1007)
E       	at org.jaxen.saxpath.base.XPathReader.unaryExpr(XPathReader.java:995)
E       	at org.jaxen.saxpath.base.XPathReader.multiplicativeExpr(XPathReader.java:943)
E       	at org.jaxen.saxpath.base.XPathReader.additiveExpr(XPathReader.java:913)
E       	at org.jaxen.saxpath.base.XPathReader.relationalExpr(XPathReader.java:860)
E       	at org.jaxen.saxpath.base.XPathReader.equalityExpr(XPathReader.java:829)
E       	at org.jaxen.saxpath.base.XPathReader.andExpr(XPathReader.java:809)
E       	at org.jaxen.saxpath.base.XPathReader.orExpr(XPathReader.java:787)
E       	at org.jaxen.saxpath.base.XPathReader.expr(XPathReader.java:780)
E       	at org.jaxen.saxpath.base.XPathReader.predicateExpr(XPathReader.java:775)
E       	at org.jaxen.saxpath.base.XPathReader.predicate(XPathReader.java:766)
E       	at org.jaxen.saxpath.base.XPathReader.predicates(XPathReader.java:751)
E       	at org.jaxen.saxpath.base.XPathReader.nameTest(XPathReader.java:717)
E       	at org.jaxen.saxpath.base.XPathReader.nodeTest(XPathReader.java:600)
E       	at org.jaxen.saxpath.base.XPathReader.step(XPathReader.java:541)
E       	at org.jaxen.saxpath.base.XPathReader.steps(XPathReader.java:442)
E       	at org.jaxen.saxpath.base.XPathReader.absoluteLocationPath(XPathReader.java:390)
E       	at org.jaxen.saxpath.base.XPathReader.locationPath(XPathReader.java:326)
E       	at org.jaxen.saxpath.base.XPathReader.pathExpr(XPathReader.java:185)
E       	at org.jaxen.saxpath.base.XPathReader.unionExpr(XPathReader.java:1007)
E       	at org.jaxen.saxpath.base.XPathReader.unaryExpr(XPathReader.java:995)
E       	at org.jaxen.saxpath.base.XPathReader.multiplicativeExpr(XPathReader.java:943)
E       	at org.jaxen.saxpath.base.XPathReader.additiveExpr(XPathReader.java:913)
E       	at org.jaxen.saxpath.base.XPathReader.relationalExpr(XPathReader.java:860)
E       	at org.jaxen.saxpath.base.XPathReader.equalityExpr(XPathReader.java:829)
E       	at org.jaxen.saxpath.base.XPathReader.andExpr(XPathReader.java:809)
E       	at org.jaxen.saxpath.base.XPathReader.orExpr(XPathReader.java:787)
E       	at org.jaxen.saxpath.base.XPathReader.expr(XPathReader.java:780)
E       	at org.jaxen.saxpath.base.XPathReader.parse(XPathReader.java:100)
E       	at org.jaxen.BaseXPath.&lt;init&gt;(BaseXPath.java:116)
E       	... 38 more

e:\install\python3.5\lib\site-packages\selenium\webdriver\remote\errorhandler.py:242: InvalidSelectorException</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="13520-MainThread"/>
        <label name="host" value="LAPTOP-OJQGNGRR"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1546056554047" status="passed" stop="1546056573950">
      <name>Test_login.test_login_error[13488834010-159357li-1-None-None]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="13520-MainThread"/>
        <label name="host" value="LAPTOP-OJQGNGRR"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1546056573951" status="failed" stop="1546056587106">
      <name>Test_login.test_login_error[13488834010 -9998888-0-\u767b\u5f55\u5bc6\u7801-\u767b\u5f55\u5bc6\u7801\u9519\u8bef]</name>
      <failure>
        <message>InvalidSelectorException: Message: io.appium.uiautomator2.common.exceptions.InvalidSelectorException: java.lang.IllegalArgumentException: Unable to compile '//*[contains(@text,'登录密码']'. See Cause.
	at io.appium.uiautomator2.core.AccessibilityNodeInfoDumper.findNodes(AccessibilityNodeInfoDumper.java:204)
	at io.appium.uiautomator2.utils.ElementLocationHelpers.getXPathNodeMatch(ElementLocationHelpers.java:68)
	at io.appium.uiautomator2.handler.FindElement.findElement(FindElement.java:103)
	at io.appium.uiautomator2.handler.FindElement.safeHandle(FindElement.java:75)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:36)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:250)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:241)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:44)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:514)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:468)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:818)
Caused by: java.lang.IllegalArgumentException: Unable to compile '//*[contains(@text,'登录密码']'. See Cause.
	at org.jdom2.xpath.jaxen.JaxenCompiled.&lt;init&gt;(JaxenCompiled.java:152)
	at org.jdom2.xpath.jaxen.JaxenXPathFactory.compile(JaxenXPathFactory.java:82)
	at org.jdom2.xpath.XPathFactory.compile(XPathFactory.java:282)
	at io.appium.uiautomator2.core.AccessibilityNodeInfoDumper.findNodes(AccessibilityNodeInfoDumper.java:202)
	... 33 more
Caused by: org.jaxen.XPathSyntaxException: Expected: )
	at org.jaxen.BaseXPath.&lt;init&gt;(BaseXPath.java:121)
	at org.jaxen.BaseXPath.&lt;init&gt;(BaseXPath.java:142)
	at org.jdom2.xpath.jaxen.JaxenCompiled.&lt;init&gt;(JaxenCompiled.java:150)
	... 36 more
Caused by: class org.jaxen.saxpath.XPathSyntaxException: //*[contains(@text,'登录密码']: 25: Expected: )
	at org.jaxen.saxpath.base.XPathReader.createSyntaxException(XPathReader.java:1085)
	at org.jaxen.saxpath.base.XPathReader.match(XPathReader.java:1038)
	at org.jaxen.saxpath.base.XPathReader.functionCall(XPathReader.java:229)
	at org.jaxen.saxpath.base.XPathReader.filterExpr(XPathReader.java:279)
	at org.jaxen.saxpath.base.XPathReader.pathExpr(XPathReader.java:161)
	at org.jaxen.saxpath.base.XPathReader.unionExpr(XPathReader.java:1007)
	at org.jaxen.saxpath.base.XPathReader.unaryExpr(XPathReader.java:995)
	at org.jaxen.saxpath.base.XPathReader.multiplicativeExpr(XPathReader.java:943)
	at org.jaxen.saxpath.base.XPathReader.additiveExpr(XPathReader.java:913)
	at org.jaxen.saxpath.base.XPathReader.relationalExpr(XPathReader.java:860)
	at org.jaxen.saxpath.base.XPathReader.equalityExpr(XPathReader.java:829)
	at org.jaxen.saxpath.base.XPathReader.andExpr(XPathReader.java:809)
	at org.jaxen.saxpath.base.XPathReader.orExpr(XPathReader.java:787)
	at org.jaxen.saxpath.base.XPathReader.expr(XPathReader.java:780)
	at org.jaxen.saxpath.base.XPathReader.predicateExpr(XPathReader.java:775)
	at org.jaxen.saxpath.base.XPathReader.predicate(XPathReader.java:766)
	at org.jaxen.saxpath.base.XPathReader.predicates(XPathReader.java:751)
	at org.jaxen.saxpath.base.XPathReader.nameTest(XPathReader.java:717)
	at org.jaxen.saxpath.base.XPathReader.nodeTest(XPathReader.java:600)
	at org.jaxen.saxpath.base.XPathReader.step(XPathReader.java:541)
	at org.jaxen.saxpath.base.XPathReader.steps(XPathReader.java:442)
	at org.jaxen.saxpath.base.XPathReader.absoluteLocationPath(XPathReader.java:390)
	at org.jaxen.saxpath.base.XPathReader.locationPath(XPathReader.java:326)
	at org.jaxen.saxpath.base.XPathReader.pathExpr(XPathReader.java:185)
	at org.jaxen.saxpath.base.XPathReader.unionExpr(XPathReader.java:1007)
	at org.jaxen.saxpath.base.XPathReader.unaryExpr(XPathReader.java:995)
	at org.jaxen.saxpath.base.XPathReader.multiplicativeExpr(XPathReader.java:943)
	at org.jaxen.saxpath.base.XPathReader.additiveExpr(XPathReader.java:913)
	at org.jaxen.saxpath.base.XPathReader.relationalExpr(XPathReader.java:860)
	at org.jaxen.saxpath.base.XPathReader.equalityExpr(XPathReader.java:829)
	at org.jaxen.saxpath.base.XPathReader.andExpr(XPathReader.java:809)
	at org.jaxen.saxpath.base.XPathReader.orExpr(XPathReader.java:787)
	at org.jaxen.saxpath.base.XPathReader.expr(XPathReader.java:780)
	at org.jaxen.saxpath.base.XPathReader.parse(XPathReader.java:100)
	at org.jaxen.BaseXPath.&lt;init&gt;(BaseXPath.java:116)
	... 38 more

</message>
        <stack-trace>self = &lt;test_bnal.Test_login object at 0x0000029A276329E8&gt;, username = '13488834010 ', password = '9998888', toast = '登录密码'
correct_toast = '登录密码错误', tag = 0

    @pytest.mark.parametrize('username, password, tag, toast, correct_toast', read_yaml())
    # @pytest.mark.run(order=10)
    def test_login_error(self, username, password, toast, correct_toast, tag):
        # 点击我的
        self.bnal.get_page_home().click_my()
        # 点击已有账号输入
        self.bnal.get_page_home().click_my_login()
        self.bnal.get_page_Input().login_kuang_error(username, password)
        self.bnal.get_page_Input().click_login()
        if tag == 1:
            try:
                success_login = self.bnal.get_page_Logined().is_logined()
                # 点击设置
                self.bnal.get_page_Logined().click_setting()
                self.bnal.get_page_Logined().up_down()
                self.bnal.get_page_Logined().click_quit()
                self.bnal.get_page_Logined().click_delete()
                assert success_login,self.bnal.get_page_Input().get_screen()
            except:
                # 定位吐司
                self.bnal.get_page_Input().get_toast(toast)
                # 截图
                self.bnal.get_page_Input().get_screen()
                # 登录失败, 点击叉号
                self.bnal.get_page_Input().click_x()
        else:
            try:
&gt;               t_oast = self.bnal.get_page_Input().get_toast_text(toast)

script\test_bnal.py:89: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
data\base_action.py:44: in get_toast_text
    toast_text = self.find_element((By.XPATH, toast_xpath)).text
data\base_action.py:13: in find_element
    return self.driver.find_element(loc[0], loc[1])
e:\install\python3.5\lib\site-packages\appium\webdriver\webdriver.py:219: in find_element
    'value': value})['value']
e:\install\python3.5\lib\site-packages\selenium\webdriver\remote\webdriver.py:321: in execute
    self.error_handler.check_response(response)
e:\install\python3.5\lib\site-packages\appium\webdriver\errorhandler.py:29: in check_response
    raise wde
e:\install\python3.5\lib\site-packages\appium\webdriver\errorhandler.py:24: in check_response
    super(MobileErrorHandler, self).check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;appium.webdriver.errorhandler.MobileErrorHandler object at 0x0000029A27621358&gt;
response = {'status': 400, 'value': '{"value":{"error":"invalid selector","message":"io.appium.uiautomator2.common.exceptions.Inv...s\\\\_appium-base-driver@3.13.1@appium-base-driver\\\\lib\\\\jsonwp-proxy\\\\proxy.js:234:19)\\n    at &lt;anonymous&gt;"}}'}

    def check_response(self, response):
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if status is None or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, basestring):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if status is None:
                        status = value["status"]
                        message = value["value"]
                        if not isinstance(message, basestring):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if value == '' or value is None:
            value = response['value']
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        if 'stackTrace' in value and value['stackTrace']:
            stacktrace = []
            try:
                for frame in value['stackTrace']:
                    line = self._value_or_default(frame, 'lineNumber', '')
                    file = self._value_or_default(frame, 'fileName', '&lt;anonymous&gt;')
                    if line:
                        file = "%s:%s" % (file, line)
                    meth = self._value_or_default(frame, 'methodName', '&lt;anonymous&gt;')
                    if 'className' in frame:
                        meth = "%s.%s" % (frame['className'], meth)
                    msg = "    at %s (%s)"
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
        elif exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)
&gt;       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.InvalidSelectorException: Message: io.appium.uiautomator2.common.exceptions.InvalidSelectorException: java.lang.IllegalArgumentException: Unable to compile '//*[contains(@text,'登录密码']'. See Cause.
E       	at io.appium.uiautomator2.core.AccessibilityNodeInfoDumper.findNodes(AccessibilityNodeInfoDumper.java:204)
E       	at io.appium.uiautomator2.utils.ElementLocationHelpers.getXPathNodeMatch(ElementLocationHelpers.java:68)
E       	at io.appium.uiautomator2.handler.FindElement.findElement(FindElement.java:103)
E       	at io.appium.uiautomator2.handler.FindElement.safeHandle(FindElement.java:75)
E       	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:36)
E       	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:250)
E       	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:241)
E       	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:44)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
E       	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
E       	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
E       	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
E       	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)
E       	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)
E       	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)
E       	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
E       	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
E       	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
E       	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
E       	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
E       	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
E       	at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:514)
E       	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:468)
E       	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
E       	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
E       	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
E       	at java.lang.Thread.run(Thread.java:818)
E       Caused by: java.lang.IllegalArgumentException: Unable to compile '//*[contains(@text,'登录密码']'. See Cause.
E       	at org.jdom2.xpath.jaxen.JaxenCompiled.&lt;init&gt;(JaxenCompiled.java:152)
E       	at org.jdom2.xpath.jaxen.JaxenXPathFactory.compile(JaxenXPathFactory.java:82)
E       	at org.jdom2.xpath.XPathFactory.compile(XPathFactory.java:282)
E       	at io.appium.uiautomator2.core.AccessibilityNodeInfoDumper.findNodes(AccessibilityNodeInfoDumper.java:202)
E       	... 33 more
E       Caused by: org.jaxen.XPathSyntaxException: Expected: )
E       	at org.jaxen.BaseXPath.&lt;init&gt;(BaseXPath.java:121)
E       	at org.jaxen.BaseXPath.&lt;init&gt;(BaseXPath.java:142)
E       	at org.jdom2.xpath.jaxen.JaxenCompiled.&lt;init&gt;(JaxenCompiled.java:150)
E       	... 36 more
E       Caused by: class org.jaxen.saxpath.XPathSyntaxException: //*[contains(@text,'登录密码']: 25: Expected: )
E       	at org.jaxen.saxpath.base.XPathReader.createSyntaxException(XPathReader.java:1085)
E       	at org.jaxen.saxpath.base.XPathReader.match(XPathReader.java:1038)
E       	at org.jaxen.saxpath.base.XPathReader.functionCall(XPathReader.java:229)
E       	at org.jaxen.saxpath.base.XPathReader.filterExpr(XPathReader.java:279)
E       	at org.jaxen.saxpath.base.XPathReader.pathExpr(XPathReader.java:161)
E       	at org.jaxen.saxpath.base.XPathReader.unionExpr(XPathReader.java:1007)
E       	at org.jaxen.saxpath.base.XPathReader.unaryExpr(XPathReader.java:995)
E       	at org.jaxen.saxpath.base.XPathReader.multiplicativeExpr(XPathReader.java:943)
E       	at org.jaxen.saxpath.base.XPathReader.additiveExpr(XPathReader.java:913)
E       	at org.jaxen.saxpath.base.XPathReader.relationalExpr(XPathReader.java:860)
E       	at org.jaxen.saxpath.base.XPathReader.equalityExpr(XPathReader.java:829)
E       	at org.jaxen.saxpath.base.XPathReader.andExpr(XPathReader.java:809)
E       	at org.jaxen.saxpath.base.XPathReader.orExpr(XPathReader.java:787)
E       	at org.jaxen.saxpath.base.XPathReader.expr(XPathReader.java:780)
E       	at org.jaxen.saxpath.base.XPathReader.predicateExpr(XPathReader.java:775)
E       	at org.jaxen.saxpath.base.XPathReader.predicate(XPathReader.java:766)
E       	at org.jaxen.saxpath.base.XPathReader.predicates(XPathReader.java:751)
E       	at org.jaxen.saxpath.base.XPathReader.nameTest(XPathReader.java:717)
E       	at org.jaxen.saxpath.base.XPathReader.nodeTest(XPathReader.java:600)
E       	at org.jaxen.saxpath.base.XPathReader.step(XPathReader.java:541)
E       	at org.jaxen.saxpath.base.XPathReader.steps(XPathReader.java:442)
E       	at org.jaxen.saxpath.base.XPathReader.absoluteLocationPath(XPathReader.java:390)
E       	at org.jaxen.saxpath.base.XPathReader.locationPath(XPathReader.java:326)
E       	at org.jaxen.saxpath.base.XPathReader.pathExpr(XPathReader.java:185)
E       	at org.jaxen.saxpath.base.XPathReader.unionExpr(XPathReader.java:1007)
E       	at org.jaxen.saxpath.base.XPathReader.unaryExpr(XPathReader.java:995)
E       	at org.jaxen.saxpath.base.XPathReader.multiplicativeExpr(XPathReader.java:943)
E       	at org.jaxen.saxpath.base.XPathReader.additiveExpr(XPathReader.java:913)
E       	at org.jaxen.saxpath.base.XPathReader.relationalExpr(XPathReader.java:860)
E       	at org.jaxen.saxpath.base.XPathReader.equalityExpr(XPathReader.java:829)
E       	at org.jaxen.saxpath.base.XPathReader.andExpr(XPathReader.java:809)
E       	at org.jaxen.saxpath.base.XPathReader.orExpr(XPathReader.java:787)
E       	at org.jaxen.saxpath.base.XPathReader.expr(XPathReader.java:780)
E       	at org.jaxen.saxpath.base.XPathReader.parse(XPathReader.java:100)
E       	at org.jaxen.BaseXPath.&lt;init&gt;(BaseXPath.java:116)
E       	... 38 more

e:\install\python3.5\lib\site-packages\selenium\webdriver\remote\errorhandler.py:242: InvalidSelectorException</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="13520-MainThread"/>
        <label name="host" value="LAPTOP-OJQGNGRR"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1546056587108" status="passed" stop="1546056605796">
      <name>Test_login.test_login_error[ 13488834010-159357li-1-None-None]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="13520-MainThread"/>
        <label name="host" value="LAPTOP-OJQGNGRR"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1546056605798" status="passed" stop="1546056624796">
      <name>Test_login.test_login_error[13488834010 -159357li-1-None-None]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="13520-MainThread"/>
        <label name="host" value="LAPTOP-OJQGNGRR"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
  </test-cases>
</ns0:test-suite>
